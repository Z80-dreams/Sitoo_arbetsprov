{"version":3,"sources":["helper_functions/guiComponents.js","helper_functions/sitooLib.js","pos_modules/addUser.js","pos_modules/editUser.js","pos_modules/deleteUsers.js","pos_modules/usersmodule.js"],"names":["popupForm","props","className","onClick","closeHandle","title","content","showAlert","text","messageStackUpdater","messageType","premessage","messageContent","showSuccess","Messages","messages","length","map","messageObj","i","removeMsg","fetch","require","btoa","settings","setUrl","corsServer","corsUrl","corsPort","apiBaseUrl","httpGet","urlstring","a","method","headers","apiId","apiPsw","catch","apiPromise","checkResponse","httpPut","dataPayload","body","JSON","stringify","httpPost","httpDelete","status","json","data","statusText","getUsers","maxUsersToGet","siteId","updateUsers","userobjects","deleteUser","userid","addUsers","addUser","tempUser","checkData","namepattern","firstnameCheck","test","namefirst","lastnameCheck","namelast","emailCheck","email","submitData","console","log","helper","addMessage","userObj","sitooApi","then","response","statuscode","handleDataloading","errortext","err","error","htmlFor","type","id","onChange","$","val","outerProps","editUser","checkedUsers","Object","assign","users","filter","datecreated","datemodified","message","defaultValue","deleteUsers","tempUsers","some","uid","deleteEach","forEach","uo","form","Users","checkNumberOfPages","windowHeight","window","innerHeight","rowHeight","first","outerHeight","tableHeaderHeight","toolboxHeight","scrollButtonsHeight","mainHeight","height","availableHeight","numRows","Math","floor","numPages","state","numberOfPages","setState","usersPerPage","changePage","p","currentPage","handleCheckbox","uidArray","addRemoveFlag","previousState","includes","index","messageStack","addMsg","obj","oldState","loadUsersIntoState","num","items","userscount","totalcount","installedFuncs","buttonName","funcName","buttonColor","loadedFunction","dataLoaded","initMessage","this","document","ready","removeClass","addClass","startAtIndex","endBeforeIndex","border","slice","checkboxCallback","checked","callbackFunc","functions","openHandle","React","Component","UserRows","userId","UserRow","keyTemplate","date","DateEntry","Date","day","getFullYear","getMonth","getDate","time","getHours","getMinutes","TableScrollButtons","Array","fill","FuncButtons","buttonObject","InstalledPopups","createElement"],"mappings":"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","file":"static/js/4.f2197360.chunk.js","sourcesContent":["/*\n  This library helps with showing errors, showing success, etc.\n*/\n\nimport React from 'react';\n\n\nimport './popupStyle.css'\n\nexport {popupForm, showAlert, showSuccess, Messages};\n\nconst popupForm = (props) => {\n    return(\n\t<div className='shadowBox hidden'>\n\t    <div className='popupBox'>\n\t\t<button className='closeButton' onClick={props.closeHandle}>Close</button>\n\t\t<h2 className='popupBox'>{props.title}</h2>\n\t\t<div className='popupBox content'>{props.content}</div>\n\t    </div>\n\t</div>\n\t\n    )\n    \n    \n}\n\nconst showAlert = (text, messageStackUpdater) => {\n    messageStackUpdater({messageType: 'alert',\n\t\t       premessage: 'Warning! ',\n\t\t       messageContent: text});\n}\n\nconst showSuccess = (text, messageStackUpdater) => {\n    messageStackUpdater({messageType: 'success',\n\t\t       premessage: 'Note! ',\n\t\t       messageContent: text});\n}\n\n\nconst Messages = (props) => {\n    \n    if (props.messages.length > 0) {\n\t\n\treturn(<div className='messages'>\n\t\t   {props.messages.map((messageObj, i) => {\n\t\t       return(\n\t\t\t   <div key={i} className={'messageBox ' + messageObj.messageType}>\n\t\t\t       \n\t\t\t       <span className='messageBox'><strong>{messageObj.premessage}</strong>{messageObj.messageContent}</span>\n\t\t\t       <button className='messageCloseButton' onClick={() => props.removeMsg(i)}>&times;</button>\n\t\t\t   </div>);\n\t\t   })}\n\t       </div>\n\n\t      );\n    } else {\n\treturn(\"\");\n    }\n}\n","/* \n   This is a library of API-functions. They do all the try-catch work, work async with promises, etc, so that\n   I don't have to concert myself with that in the main code. \n   \n   Lots of arrow functions here, as I don't want any of them to have any state and only return immutable data. \n   Async .then method is used to wait for respone, and then chain on another thing to do.\n*/\n\n\n\n\n// These lines are needed when debugging in node. In browsers fetch, btoa and require is already installed.\n//==========================================================================================================\nconst fetch = require(\"node-fetch\");\nconst btoa = require(\"btoa\");\nconst settings = require(\"../sitoo_settings.json\");\n//==========================================================================================================\n\nconst setUrl = () => settings.corsServer ? settings.corsUrl + \":\" + settings.corsPort + \"/\" + settings.apiBaseUrl : settings.apiBaseUrl ;\n\n\n/* Base function for GET, PUT and POST, so that I don't have to write the error checking code for each type of user data */\nconst httpGet = async function(urlstring) {\n    let apiPromise = await fetch(urlstring, {method: 'GET',\n\t\t\t\t\t     headers: {'Content-Type': 'application/json',\n\t\t\t\t\t\t       'Accept': 'application/json',\n\t\t\t\t\t\t       'Authorization': 'Basic ' + btoa(settings.apiId + ':' + settings.apiPsw),}}).catch();\n    \n    return await checkResponse(apiPromise);        \n}\n\nconst httpPut = async function(urlstring, dataPayload) {\n    let apiPromise = await fetch(urlstring, {method: 'PUT',\n\t\t\t\t\t     headers: {'Content-Type': 'application/json',\n\t\t\t\t\t\t       'Accept': 'application/json',\n\t\t\t\t\t\t       'Authorization': 'Basic ' + btoa(settings.apiId + ':' + settings.apiPsw),},\n\t\t\t\t\t     body: JSON.stringify(dataPayload)});\n\n    return await checkResponse(apiPromise);\n}\n\nconst httpPost = async function(urlstring, dataPayload) {\n    let apiPromise = await fetch(urlstring, {method: 'POST',\n\t\t\t\t\t     headers: {'Content-Type': 'application/json',\n\t\t\t\t\t\t       'Accept': 'application/json',\n\t\t\t\t\t\t       'Authorization': 'Basic ' + btoa(settings.apiId + ':' + settings.apiPsw),},\n\t\t\t\t\t     body: JSON.stringify(dataPayload)});\n\n    return await checkResponse(apiPromise);\n\n}\n\nconst httpDelete = async function(urlstring) {\n    let apiPromise = await fetch(urlstring, {method: 'DELETE',\n\t\t\t\t\t     headers: {'Content-Type': 'application/json',\n\t\t\t\t\t\t       'Accept': 'application/json',\n\t\t\t\t\t\t       'Authorization': 'Basic ' + btoa(settings.apiId + ':' + settings.apiPsw),}});\n    \n    return await checkResponse(apiPromise);\n}\n\n\nconst checkResponse = async function(apiPromise) {\n    let data\n    if (apiPromise.status >= 200 && apiPromise.status < 300) {\n\tdata = {\"status\": apiPromise.status,\n\t\t\"text\": await apiPromise.json(),\n\t       }\n    } else {\n\tdata = {\"status\": apiPromise.status,\n\t\t\"text\": {\"message\": apiPromise.statusText},\n\t       }\n    }\n    return(data);     \n}\n\n\n\n/* Specific functions for each type of user data, so that I don't have to rembmer the URL */\nconst getUser = async function(userid) {\n    return await httpGet(setUrl() + 'sites/' + settings.siteId + '/users/' + userid + '.json');\n};\n\n\nconst getUsers = async function(maxUsersToGet) {\n    return await httpGet(setUrl() + 'sites/' + settings.siteId + '/users.json?num=' + maxUsersToGet);\n}\n\n\n\nconst updateUser = async function(userid, userobject) {\n    return await httpPut(setUrl() + 'sites/' + settings.siteId + '/users/' + userid + '.json', userobject);\n}\n\nconst updateUsers = async function(userobjects) {\n    return await httpPut(setUrl() + 'sites/' + settings.siteId + '/users.json', userobjects);\n}\n\nconst deleteUser = async function(userid) {\n   return await httpDelete(setUrl() + 'sites/' + settings.siteId + '/users/' + userid + '.json'); \n}\n\nconst addUsers = async function(userobjects) {\n    return await httpPost(setUrl() + 'sites/' + settings.siteId + '/users.json', userobjects);\n}\n\n// uncomment below when testing on web server.\nexport {getUser, getUsers, updateUser, updateUsers, deleteUser, addUsers};\n// Below is just used for testing in node.js, comment when testing on web server.\n// module.exports =  {getUser, getUsers, updateUser, updateUsers, deleteUser, addUsers}\n\n\n","/*\n  This file contains the logic for adding users\n*/\n\nimport React from 'react';\nimport $ from 'jquery';\n\n// Home made helper libraries\nimport * as helper from './../helper_functions/guiComponents.js';\nimport * as sitooApi from './../helper_functions/sitooLib.js';\n\n\n\nconst addUser = (props) => {\n    let tempUser = {};\n\n\n    const form = () => {\n\treturn(\n\t    <>\n\t\t<form className='popupForm'>\n\t\t    <label htmlFor='namefirst' className='popupForm'>First name</label><br/>\n\t\t    <input type='text' id='namefirst' className='popupForm' onChange={() => {tempUser.namefirst = $('#namefirst').val()}} /><br/>\n\t\t    <label htmlFor='namelast' className='popupForm'>Last name</label><br/>\n\t\t    <input type='text' id='namelast' className='popupForm' onChange={() => {tempUser.namelast = $('#namelast').val()}} /><br/>\n\t\t    <label htmlFor='email' className='popupForm'>Email</label><br/>\n\t\t    <input type='text' id='email' className='popupForm'  onChange={() => {tempUser.email = $('#email').val()}}/><br/>\n\t\t</form>\n\t\t<div className='formButtons'>\n\t\t    <button className='popupForm cancel' onClick={props.closeHandle}>Cancel</button>\n\t\t    <button className='popupForm submit' onClick={checkData}>Save</button>\n\t\t</div>\n\t    </>\n\t);\n    }\n\n\n\n\n    const checkData = () => {\n\t// Checking both names and email using regular expressions.\n\n\t// Only allow letters, space and dash (-) in names. unicode is permitted, hence the unicode flag.\n\tconst namepattern = /^[\\p{L}\\s-]+$/u\n\n\t// email address can contain a-z, A-Z, 0-9, period or dash, one or more times,\n\t// followed by @-sign, followed by a-z, A-Z, 0-9, period or dash, one or ore times,\n\t// followed by a period and then a-z or A-Z that is two to four characters long\n\t// Unicode is not permitted in email address (åäö)\t\n\tconst emailpattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\n\t\n\tlet firstnameCheck = namepattern.test(tempUser.namefirst);\n\tlet lastnameCheck = namepattern.test(tempUser.namelast);\n\tlet emailCheck = emailpattern.test(tempUser.email);\n\n\tif(firstnameCheck && lastnameCheck && emailCheck) {\n\t    submitData(tempUser);\n\t}\n\telse if (!emailCheck) {\n\t    helper.showAlert(\"That's not a valid email address!\", props.addMessage);\n\t}\n\telse if (!firstnameCheck) {\n\t    helper.showAlert(\"Only letters, spaces and dash is allowed in the first name, and it cannot be empty!\", props.addMessage);\n\t}\n\telse if (!lastnameCheck) {\n\t    helper.showAlert(\"Only letters, spaces and dash is allowed in the last name, and it cannot be empty!\", props.addMessage);\n\t}\n\telse {\n\t    console.log(\"Something that shouldn't happen, happened!\");\n\t}\n\t\n    }\n\n    const submitData = (userObj) => {\n\tsitooApi.addUsers([userObj]).then(response => {\n\n\t    if (response.status >= 200 && response.status < 300) {\n\t\tif (response.text[0].statuscode >= 200 && response.text[0].statuscode < 300) {\n\t\t    helper.showSuccess(\"User added!\", props.addMessage);\n\t\t    props.handleDataloading();\n\t\t    props.closeHandle();\n\t\t}\n\t\telse {\n\t\t    helper.showAlert(\"Could not add user. \" + response.text[0].errortext, props.addMessage);\n\t\t}\n\t\t\n\t    }\n\t    else {\n\t\thelper.showAlert(response.status + \" - \" + response.text + \" (Are you connected to the Internet?)\", props.addMessage);\n\t    }\n\t}).catch(err => {\n\t    helper.showAlert(\"Could not add user. (Are you connected to the Internet?)\", props.addMessage);\n\t    console.error(err);\n\t    props.handleDataloading();\n\t    props.closeHandle();\n\t});\n\t\n    }\n\n    /* =================================================================== */\n\n    return(\n\t<helper.popupForm title='Add User' content={form()} closeHandle={props.closeHandle} outerProps={props} />\n    );      \n}\n\nexport default addUser;\n","/*\n  This file contains the logic for adding users\n*/\n\nimport React from 'react';\nimport $ from 'jquery';\n\n// Home made helper libraries\nimport * as helper from './../helper_functions/guiComponents.js';\nimport * as sitooApi from './../helper_functions/sitooLib.js';\n\n\n\nconst editUser = (props) => {\n    \n    let tempUser = {};\n\n    if (props.checkedUsers.length === 1) {\n\ttempUser = Object.assign(tempUser, props.users.filter(userObj => userObj.userid === props.checkedUsers[0])[0]);\n\tdelete tempUser.datecreated;\n\tdelete tempUser.datemodified;\n    }\n\n    const form = () => {\n\t\n\treturn(\n\t    <>\n\t\t<form className='popupForm'>\n\t\t    <label htmlFor='namefirst' className='popupForm'>First name</label><br/>\n\t\t    <input type='text' id='namefirst' className='popupForm' defaultValue={tempUser.namefirst} onChange={() => {tempUser.namefirst = $('#namefirst').val()}} /><br/>\n\t\t    <label htmlFor='namelast' className='popupForm'>Last name</label><br/>\n\t\t    <input type='text' id='namelast' className='popupForm' defaultValue={tempUser.namelast} onChange={() => {tempUser.namelast = $('#namelast').val()}} /><br/>\n\t\t    <label htmlFor='email' className='popupForm'>Email</label><br/>\n\t\t    <input type='text' id='email' className='popupForm' defaultValue={tempUser.email} onChange={() => {tempUser.email = $('#email').val()}}/><br/>\n\t\t</form>\n\t\t<div className='formButtons'>\n\t\t    <button className='popupForm cancel' onClick={props.closeHandle}>Cancel</button>\n\t\t    <button className='popupForm submit' onClick={checkData}>Save</button>\n\t\t</div>\n\t    </>\n\t);\n    }\n\n    \n    const checkData = () => {\n\t// Checking both names and email using regular expressions.\n\n\t// Only allow letters, space and dash (-) in names. unicode is permitted, hence the unicode flag.\n\tconst namepattern = /^[\\p{L}\\s-]+$/u\n\n\t// email address can contain a-z, A-Z, 0-9, period or dash, one or more times,\n\t// followed by @-sign, followed by a-z, A-Z, 0-9, period or dash, one or ore times,\n\t// followed by a period and then a-z or A-Z that is two to four characters long\n\t// Unicode is not permitted in email address (åäö)\t\n\tconst emailpattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\n\t\n\tlet firstnameCheck = namepattern.test(tempUser.namefirst);\n\tlet lastnameCheck = namepattern.test(tempUser.namelast);\n\tlet emailCheck = emailpattern.test(tempUser.email);\n\n\tif(firstnameCheck && lastnameCheck && emailCheck) {\n\t    submitData(tempUser);\n\t}\n\telse if (!emailCheck) {\n\t    helper.showAlert(\"That's not a valid email address!\", props.addMessage);\n\n\t}\n\telse if (!firstnameCheck) {\n\t    helper.showAlert(\"Only letters, spaces and dash is allowed in the first name, and it cannot be empty!\", props.addMessage);\n\n\t}\n\telse if (!lastnameCheck) {\n\t    helper.showAlert(\"Only letters, spaces and dash is allowed in the last name, and it cannot be empty!\", props.addMessage);\n\n\t}\n\telse {\n\t    console.log(\"Something that shouldn't happen, happened!\");\n\t}\n\t\n    }\n\n    const submitData = (userObj) => {\n\tsitooApi.updateUsers([userObj]).then(response => {\n\n\t    if (response.status >= 200 && response.status < 300) {\n\t\tif (response.text[0].statuscode >= 200 && response.text[0].statuscode < 300) {\n\t\t    helper.showSuccess(\"User updated!\", props.addMessage);\n\t\t    props.handleDataloading();\n\t\t    props.closeHandle();\n\t\t}\n\t\telse {\n\t\t    helper.showAlert(\"Could not update user. \" + response.text[0].errortext, props.addMessage);\n\t\t}\n\t\t\n\t    }\n\t    else {\n\t\thelper.showAlert(response.status + \" - \" + response.text.message + \" (Are you connected to the Internet?)\", props.addMessage);\n\t    }\n\t}).catch(err => {\n\t    helper.showAlert(\"Could not update user. (Are you connected to the Internet?)\", props.addMessage);\n\t    console.error(err);\n\t    props.handleDataloading();\n\t    props.closeHandle();\n\t});\n\t\n    }\n\n    /* =================================================================== */\n    if (props.checkedUsers.length < 1) {\n\treturn(\n\t    <helper.popupForm title='Edit User' content={<p>You must select at least one user to edit.</p>} closeHandle={props.closeHandle} outerProps={props} />\n\t);\n    }\n    else if (props.checkedUsers.length > 1) {\n\treturn(\n\t<helper.popupForm title='Edit User' content={<p className='popupBox'>You can only edit one user at a time.</p>} closeHandle={props.closeHandle} outerProps={props} />\n\t);\n    }\n    else if (props.checkedUsers.length === 1) {\n\treturn(\n\t    <helper.popupForm title='Edit User' content={form()} closeHandle={props.closeHandle} outerProps={props} />\n    );\n    }\n    else {\n\tconsole.log(\"How did I get here?\");\n    }\n}\n\nexport default editUser;\n","/*\n  This file contains the logic for adding users\n*/\n\nimport React from 'react';\n\n// Home made helper libraries\nimport * as helper from './../helper_functions/guiComponents.js';\nimport * as sitooApi from './../helper_functions/sitooLib.js';\n\n\n\nconst deleteUsers = (props) => {\n\n    \n    let tempUsers = props.users.filter((userObj) => {\n\treturn props.checkedUsers.some((uid) =>\n\t    {\n\t\treturn uid === userObj.userid;\n\t    })\n    });\n\n    \n    \n    const form = () => {\n\t\n\tif (tempUsers.length > 0 && tempUsers.length < 11) {\n\t    return(\n\t\t<>\n\t\t    <div className='popupForm deleteheader'>\n\t\t\tDo you <strong>really</strong> want to delete the users below?<br/>\n\t\t\tThis action cannot be undone.\n\t\t    </div>\n\t\t    <div className='popupForm deleteuserslist'>\n\t\t\t{tempUsers.map((userObj) => {\n\t\t\t    return(\n\t\t\t\t\n\t\t\t\t<div key={userObj.userid} className='deleteRow'>\n\t\t\t\t    <span key={userObj.userid + \".name\"} className='popupForm nametodelete'>{userObj.namefirst} {userObj.namelast} </span><span key={userObj.userid + \".email\"} className='popupForm emailtodelete'> ({userObj.email})</span><br/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t    );\n\t\t\t})\n\t\t\t}\n\t\t    </div>\n\t\t    <div className='formButtons'>\n\t\t\t<button className='popupForm cancel' onClick={props.closeHandle}>Cancel</button>\n\t\t\t<button className='popupForm submit' onClick={deleteEach}>Save</button>\n\t\t    </div>\n\t\t</>\n\t    );\n\t}\n    }\n\n    const deleteEach = () => {\n\ttempUsers.forEach(\n\t    (userObj) => {\n\t\tsubmitData(userObj.userid);\n\t    });\n\t\n    }\n    \n    const submitData = (uid) => {\n\tlet userObj = props.users.filter((uo) => {\n\t    return uo.userid === uid;\n\t})[0]\n\tconsole.log(userObj);\n\t\n\tsitooApi.deleteUser(uid).then(response => {\n\n\t    if (response.status >= 200 && response.status < 300) {\n\t\tif (response.text === true) {\n\t\t    helper.showSuccess(\"User \" + userObj.namefirst + \" \" + userObj.namelast + \" deleted!\", props.addMessage);\n\t\t    props.handleDataloading();\n\t\t    props.closeHandle();\n\t\t}\n\t\telse {\n\t\t    helper.showAlert(\"Could not delete user \" + userObj.namefirst + \" \" + userObj.namelast + \". \" + response.text.errortext, props.addMessage);\n\t\t}\n\t\t\n\t    }\n\t    else {\n\t\thelper.showAlert(response.status + \" - \" + response.text.message + \" (Are you connected to the Internet?)\", props.addMessage);\n\t    }\n\t}).catch(err => {\n\t    helper.showAlert(\"Could not delete user \" + userObj.namefirst + \" \" + userObj.namelast + \" (Are you connected to the Internet?)\", props.addMessage);\n\t    console.error(err);\n\t    props.handleDataloading();\n\t    props.closeHandle();\n\t});\n\t\n    }\n\n    /* =================================================================== */\n    if (props.checkedUsers.length < 1) {\n\treturn(\n\t    <helper.popupForm title='Delete User' content={<p>You must select at least one user to delete.</p>} closeHandle={props.closeHandle} outerProps={props} />\n\t);\n    }\n    else if (props.checkedUsers.length > 10) {\n\treturn(\n\t    <helper.popupForm title='Delete User' content={<p className='popupBox'>You can only delete ten user at a time, as safety measure.</p>} closeHandle={props.closeHandle} outerProps={props} />\n\t);\n    }\n    else {\n\treturn(\n\t    <helper.popupForm title='Delete User' content={form()} closeHandle={props.closeHandle} outerProps={props} />\n    );\n    }\n}\n\nexport default deleteUsers;\n","/*\n  This module handles users that can log in to the pos system. It can add, update and delete users. \n  Inside class Users the render method, componentDidMount method and componentDidUpdate method\n  Is declared using normal function declarations, as they are already part of React.component.\n  The other methods are declared using function expressions instead of function declaration, \n  Due to JavaScript delayd execution, the methods expressed in this way aren't loaded into memory\n  until they are needed, and thus lowers the overall memory usage. \n*/\n\nimport React from 'react';\nimport $ from 'jquery';\n\n// Home made helper libraries\nimport * as helper from './../helper_functions/guiComponents.js';\nimport * as sitooApi from './../helper_functions/sitooLib.js';\nimport addUser from './addUser.js';\nimport editUser from './editUser.js';\nimport deleteUsers from './deleteUsers.js';\nimport './userStyle.css';\n\nexport default class Users extends React.Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    installedFuncs: [{buttonName: 'Add User',\n\t\t\t      funcName: addUser,\n\t\t\t      buttonColor: 'blue',},\n\t\t\t     {buttonName: 'Edit Selected',\n\t\t\t      funcName: editUser,\n\t\t\t      buttonColor: 'blue',},\n\t\t\t     {buttonName: 'Delete Selected',\n\t\t\t      funcName: deleteUsers,\n\t\t\t      buttonColor: 'red',}], // Make sure functions exists below, outside of Class. \n\t    loadedFunction: 0, // 0 means none loaded.\n\t    users: [],\n\t    userscount: 100, // 100 until the load function run. That will get the \"totalcount\" from API, and compare to length of users array. \n\t    dataLoaded: false,\n\t    currentPage: 1,\n\t    numberOfPages: 1, // Set to 1 initially, then change state once all entries has been loaded from the API, and the actual length is known.\n\t    usersPerPage: 1,\n\t    checkedUsers: [],\n\t    messageStack: [],\n\t    initMessage: 'Loading users from remote source.',\n\n\n\t    \n\t    // renderTime: [new Date], // This state is only used in testing, when we want to know render times. \n\n\t};\n\n\t// uncomment for testing performance.\n\t// this.state.renderTime.push(new Date);\n\n    }\n\n\n    componentDidMount() {\t\n\t// This is to select the first button on startup.\n\tthis.changePage(1);\n\n\t\n    }\n\n    componentDidUpdate() {\n\t//  Doing some JQuery stuff once the page has rendered. This is to highlight the currently selected page.\n\t$(document).ready(() => {\n\t    $('button.tableScrollButtons').removeClass('selected');\n\t    $('button.tableScrollButtons.' + this.state.currentPage).addClass('selected');\n\t});\n\t\n\t// Run function to calculate number of pages needed.\n\tthis.checkNumberOfPages();\n\n\t// If we notice that data loaded-flag is set to false, we try to reload the last known users count.\n\tif(!this.state.dataLoaded) {\n\t    this.setState({dataLoaded: true});\n\t    this.loadUsersIntoState(this.state.userscount);\n\t    \n\t}\n\n\t\n\t// Uncomment below to get data about rendering times. Don't forget to uncomment array renderTime in state. \n\t// this.state.renderTime.push(new Date);\n\t// console.log(\"Rendering took \" + (this.state.renderTime[this.state.renderTime.length-1] - this.state.renderTime[this.state.renderTime.length-2]) + \" milliseconds.\");\n\t// console.log(\"Total time spend is \" + (this.state.renderTime[this.state.renderTime.length-1] - this.state.renderTime[0]) + \" milliseconds.\");\n\n    }\n\n    /*************************************************************************\n     *                                                                       *\n     *         RENDER FUNCTION STARTS HERE...                                *\n     *                                                                       *\n     *************************************************************************/\n\n    render() {\n\t// Used to know where to start and end the table.\n\tlet startAtIndex = (this.state.currentPage - 1) * this.state.usersPerPage;\n\tlet endBeforeIndex = startAtIndex + this.state.usersPerPage;\n\t\n\tif (this.state.dataLoaded) {\n\t    \n\t    \n\t    return(\n\t\t/*  <div className='test-div-users'>\n\t\t    Foo Users!\n\t\t    <p>\n\t\t    <button onClick={this.togglePopup}>Open Popup</button>\n\t\t    Popup is {String(this.state.isPopup)}\n\t\t    \n\t\t    </p>\n\t\t    {this.state.isPopup && <helper.popupForm title='This is a title' content='This is content' closeHandle={this.togglePopup} />}\n\t\t    </div> */\n\t\t<>\n\t\t    <table className=\"usersTable\" border=\"0\">\n\t\t\t<thead className=\"usersTable\">\n\t\t\t    <tr key=\"head \"className=\"usersTable\">\n\t\t\t\t<th className=\"usersTable checkbox\"></th>\n\t\t\t\t<th className=\"usersTable name\">Name</th>\n\t\t\t\t<th className=\"usersTable email\">Email</th>\n\t\t\t\t<th className=\"usersTable date\">Date Created</th>\n\t\t\t\t<th className=\"usersTable time\"></th>\n\t\t\t\t<th className=\"usersTable date\">Date Modified</th>\n\t\t\t\t<th className=\"usersTable time\"></th>\n\t\t\t    </tr>\n\t\t\t</thead>\n\t\t\t<UserRows currentPage={this.state.currentPage} users={this.state.users.slice(startAtIndex, endBeforeIndex)} checkboxCallback={this.handleCheckbox} checked={this.state.checkedUsers} />\n\t\t\t\n\t\t    </table>\n\t\t    <div className=\"bottomstuff\">\n\t\t\t<TableScrollButtons numberOfPages={this.state.numberOfPages} currentPage={this.state.currentPage} callbackFunc={this.changePage} />\n\t\t\t<FuncButtons functions={this.state.installedFuncs} openHandle={(i) => {\n\t\t\t\t\t this.setState({loadedFunction: i})}} />\n\t\t    </div>\n\t\t    <InstalledPopups functions={this.state.installedFuncs} loadedFunction={this.state.loadedFunction} closeHandle={() => {this.setState({loadedFunction: 0})}} users={this.state.users} checkedUsers={this.state.checkedUsers} handleDataloading={() => {this.setState({dataLoaded: false})}} addMessage={this.addMsg} />\n\t\t    <helper.Messages messages={this.state.messageStack} removeMsg={this.removeMsg} />\n\t\t    \n\t\t</>\t\n\t    );\n\t    \n\t}\n\telse {\n\t    return (\n\t\t<>\n\t\t    <strong>{this.state.initMessage}</strong>\n\t\t</>\n\t    );\n\t}\n    }\n\n    /*************************************************************************\n     *                                                                       *\n     *         RENDER FUNCTION ENDS HERE...                                  *\n     *                                                                       *\n     *         NOW STARTS METHODS FOR HANDLING THE TABLE OF USERS...         *\n     *                                                                       *\n     *************************************************************************/\n\n    checkNumberOfPages = () => {\n\t// Checking if the number of rows that fits in one page of the table has changed since last render.\n\tlet windowHeight = ($(window).innerHeight() || 500);\n\tlet rowHeight = ($('td.usersTable').first().outerHeight(true) || 27);\n\tlet tableHeaderHeight = ($('th.usersTable').first().outerHeight(true) || 25);\n\tlet toolboxHeight = ($('div.installedFunctions').first().outerHeight(true) || 50);\n\tlet scrollButtonsHeight = ($('div.tableScrollButtons').first().outerHeight(true) || 50);\n\tlet headerHeight = ($('header').first().outerHeight(true) || 50);\n\tlet menuHeight = ($('nav').first().outerHeight(true) || 50);\n\t\n\t//Calculating how much space I have, how many rows fit in one page, and how many pages are needed.\n\tlet mainHeight = windowHeight - headerHeight - menuHeight;\n\t// Set main tag to available space.\n\tif (mainHeight > 0) {\n\t    $('main').height(mainHeight);\n\t}\n\t// Calcualte available Space\n\tlet availableHeight = mainHeight - scrollButtonsHeight - toolboxHeight - tableHeaderHeight;\n\tlet numRows = Math.floor(availableHeight / rowHeight) - 1;\n        // Make sure we don't get negative or 0 number of rows. We don't want division by 0.\n\tif (numRows < 0) \n\t    numRows = 1;\n\t\n\tlet numPages = Math.floor(this.state.users.length / numRows) + 1;\n\n\t// Make sure we get at least one. \n\tif (numPages < 1)\n\t    numPages = 1;\n\n\n\n\t/* \n\t   If numPages matches the current state, setState is not called. This lowers the render-cycles.\n\t   Without this if statement we would end up with an infinite loop of renders, as render() is automatically\n\t   called when satate changes, and componentDidUpdate()-hook is called after each render-cycle. \n\t   I only need to check numPages, as usersPerPage will update that variable as well. In testing about 5 render cycles\n\t   are needed before all properties are set correctly. Each render cycle takes around 200 ms in testing. \n\t*/\n\tif (numPages !== this.state.numberOfPages)\n\t    this.setState({numberOfPages: numPages,\n\t\t\t   usersPerPage: numRows,\n\t\t\t  });\n    }\n\n    // This function changes the page currently viewed in the table. Number of pages is based on how many entries exists, and how many fit in one page.\n    changePage = (p) => {\n\tif (p<1) {\n\t    this.setState({currentPage: 1});\n\t}\n\telse if (p>this.state.numberOfPages) {\n\t    this.setState({currentPage: this.state.numberOfPages});\n\t}\n\telse {\n\t    this.setState({currentPage: p});\n\t}\n    }\n\n    // This function handles the checkboxes\n    handleCheckbox = (uidArray, addRemoveFlag) => {\n\tif(addRemoveFlag === 'add') {\n\t    this.setState(previousState => {\n\t\treturn({checkedUsers: [...previousState.checkedUsers, ...uidArray]}); // Use spread operator\n\t    })\n\t}\n\telse if(addRemoveFlag === 'remove')\n\t{\n\t    this.setState(previousState => {\n\t\t// User filter with negation. If uidArray contains x, it fails and is not filtered out. If uid array does not contain x, it passes the text and is filtered out for keeping.\n\t\treturn({checkedUsers: previousState.checkedUsers.filter(i => !uidArray.includes(i))}); \n\t    })   \n\t}\n    }\n\n    /*************************************************************************\n     *                                                                       *\n     *         TABLE METHODS END HERE...                                     *\n     *                                                                       *\n     *         NOW STARTS METHODS FOR HANDLING MESSAGES...                   *\n     *                                                                       *\n     *************************************************************************/\n\n    removeMsg = (index) => {\n\tif (this.state.messageStack.length > index && index > -1)\n\t{\n\t    this.setState(previousState => ({messageStack: previousState.messageStack.filter((message, i) => {if (i !== index) {return message} else {return false}})}));\n\t}\n\t\n    }\n\n    addMsg = (obj) => {\n\tthis.setState((oldState) => ({messageStack: [...oldState.messageStack, obj]}))\n    }\n    \n\n\n    /*************************************************************************\n     *                                                                       *\n     *         MESSAGE METHODS END HERE...                                   *\n     *                                                                       *\n     *         NOW STARTS METHOD FOR HANDLING DATA LOADING...                *\n     *                                                                       *\n     *************************************************************************/\n\n\n\n    // This function calls the sitoo API lib that I wrote, and tries to load all users into state.\n    // If the number of entries differ from the recived array, it tries again recursively. \n    loadUsersIntoState = (num) => {\n\tsitooApi.getUsers(num).then(data => {\n\t    if (data.status >= 200 && data.status < 300) {\n\t\t// I initially wanted to sort all the names in alphabetical order here, but I noticed that\n\t\t// the loading time of the page increased significant. I therefore dropped the array sort\n\t\t// in faviour of faster loading of the user table.\n\t\t\n\t\tthis.setState({\n\t\t    users: data.text.items,\n\t\t    userscount: data.text.totalcount,\n\t\t});\n\t    }\n\t    else {\n\t\thelper.showAlert(\"Could not load users. Error \" + data.status + \" - \" + data.text.message, this.addMsg);\n\t    }\n\t}).catch(err => {\n\t    helper.showAlert(\"Could not load users. (Are you connected to the Internet?)\", this.addMsg);\n\t    console.error(err)\n\t}).then(() => {\n\t    if (this.state.users.length !== this.state.userscount) {\n\t\tthis.loadUsersIntoState(this.state.userscount); // Fetching exactly as many users as we need!\n\t    } else {\n\t\treturn;\n\t    }});\n    }\n\n}\n\n    /*************************************************************************\n     *                                                                       *\n     *         CLASS USERS END HERE                                          *\n     *                                                                       *\n     *         NOW STARTS FUNCTIONS OUTSIDE OF CLASS DEFINITON               *\n     *                                                                       *\n     *         Due to JavaScript delayed execurion, I try to use function    *\n     *         expressions rather than function declarations whenever I      *\n     *         can, this lowers the memory usage.                            *\n     *                                                                       *  \n     *************************************************************************/\n\n\n    /*************************************************************************\n     *                                                                       *\n     *         FUNCTIONS TO DRAW THE TALBE OF USERS STARTS HERE...           *\n     *                                                                       *\n     *************************************************************************/\n\nconst UserRows = (props) => {\n    \n    return(<tbody key='tablebody' className=\"usersTable\">\n\t       {props.users.map((userObj) => {\n\t\t   return(\n\t\t       <UserRow key={userObj.userid} userId={userObj.userid} namefirst={userObj.namefirst} namelast={userObj.namelast} email={userObj.email} datecreated={userObj.datecreated} datemodified={userObj.datemodified} checkboxCallback={props.checkboxCallback} checked={props.checked}/>\n\t\t   )})}\n\t   </tbody>\n\t  ); \n}\n\n\nconst UserRow = (props) => {\n    let setparameters = () => {\n\tif(props.checked.some(uid => {return props.userId === uid})) {\n\t    props.checkboxCallback([props.userId], 'remove');\n\t} else {\n\t    props.checkboxCallback([props.userId], 'add');\n\t}\n    }\n\n    \n    return(\n\t<tr key={props.userId} className=\"usersTable\">\n\t    <td key={props.userId + \"checkbox\"} className=\"usersTable checkbox\"><form><input key={props.userId + \"checkbox\"} type=\"checkbox\" checked={props.checked.some(uid => {return props.userId === uid})} onChange={setparameters} /></form></td>\n\t    <td key={props.userId + \"name\"} className=\"usersTable name\">{props.namefirst + \" \" + props.namelast}</td>\n\t    <td key={props.userId + \"email\"} className=\"usersTable email\">{props.email}</td>\n\t    <DateEntry keyTemplate={props.userId + \"created\"} date={props.datecreated} />\n\t    <DateEntry keyTemplate={props.userId + \"modified\"} date={props.datemodified} />\n\t</tr>\n    );\n}\n\nconst DateEntry = (props) => {\n    let date = new Date(props.date*1000);\n    let day = ('0000' + date.getFullYear()).slice(-4) + \"-\" + ('00' + date.getMonth()).slice(-2) + \"-\" + ('00' + date.getDate()).slice(-2);\n    let time = ('00' + date.getHours()).slice(-2) + \":\" + ('00' + date.getMinutes()).slice(-2);\n\n    return(\n\t<>\n\t    <td key={props.keyTemplate + \"day\"} className=\"usersTable date\">{day}</td>\n\t    <td key={props.keyTemplate + \"time\"} className=\"usersTable time\">{time}</td>\n\t</>\n    );\n}\n\n// This function generates the buttons to select another page in the table.\nconst TableScrollButtons = (props) => {\n\n    let a = Array(props.numberOfPages).fill(0);\n    return(\n\t<div className=\"tableScrollButtons\">\n\t    <ul className=\"tableScrollButtons\">\n\t\t<li key=\"left\" className=\"tableScrollButtons left\"><button className=\"tableScrollButtons left\" onClick={() => props.callbackFunc(props.currentPage-1)}>&lt;&lt;</button></li>\n\t\t{a.map((a, i) => {return(\n\t\t    <li key={i+1}className={\"tableScrollButtons \" + (i + 1)}>\n\t\t\t<button className={\"tableScrollButtons \" + (i + 1)} onClick={() => props.callbackFunc(i+1)}>\n\t\t\t    {i+1}\n\t\t\t</button>\n\t\t    </li>)})}\n\t\t<li key={\"right\"} className=\"tableScrollButtons right\"><button className=\"tableScrollButtons right\" onClick={() => props.callbackFunc(props.currentPage+1)}>&gt;&gt;</button></li>\n\t\t\n\t    </ul>\n\t    \n\t</div>\n    );\n\n}\n\n    /*************************************************************************\n     *                                                                       *\n     *         FUNCTIONS TO DRAW THE TALBE OF USERS ENDS HERE...             *\n     *                                                                       *\n     *         NOW STARTS FUNCTIONS TO HANDLE PLUGINS.                       *\n     *         I.E. ADD USER, EDIT USER AND DELETE USERS.                    *\n     *                                                                       *\n     *************************************************************************/\n\n// This function generates the \"toolbox\" at the bottom.\nconst FuncButtons = (props) => {\n    return(<div className=\"installedFunctions\">\n\t       <ul className=\"installedFunctions\">\n\t\t   {props.functions.map((buttonObject, i) => {\n\t\t       return(\n\t\t\t   <li key={i} className=\"installedFunctions\">\n\t\t\t       <button className={\"installedFunctions \" + buttonObject.buttonColor} onClick={() => props.openHandle(i+1)}>\n\t\t\t\t   {buttonObject.buttonName}\n\t\t\t       </button>\n\t\t\t   </li>\n\t\t       )})}\n\t       </ul>\n\t   </div>);\n    \n}\n\n// This one makes sure that the popups appear when buttons are called. They are 1-indexed, as index 0 denote popup closed. That's why I need to check loadedFunction-1.\nconst InstalledPopups = (props) => {\n    if (props.loadedFunction > 0) {\n\treturn React.createElement(props.functions[props.loadedFunction-1].funcName, { users: props.users,\n\t\t\t\t\t\t\t\t\t\t       checkedUsers: props.checkedUsers,\n\t\t\t\t\t\t\t\t\t\t       closeHandle: props.closeHandle,\n\t\t\t\t\t\t\t\t\t\t       handleDataloading: props.handleDataloading,\n\t\t\t\t\t\t\t\t\t\t       addMessage: props.addMessage,}, null);\n    } else {\n\treturn \"\";\n    }\n}\n\n\n\n\n\n"],"sourceRoot":""}